/** @format */
// 样式变得复杂的时候，要【大段】重复样式的时候，用变量的效果不好
// 需要声明混合宏

// border-radius是混合宏的名称 自定义的
@mixin border-radius {
  border-radius: 5px;
  -webkit-border-radius: 5px;
}

// 带参数的混合宏
// 这里给$radius设置了默认值，也可以自己传入一个
@mixin border-radius($radius: 5px) {
  -wbkit-border-radius: $radius;
}

//$shadow参数数量有多个的时候，可以使用...来代替
// prefixer
@mixin box-shadow($shadow...) {
  @if length($shadow) >=1 {
    -webkit-box-shadow: $shadow;
    box-shadow: $shadow;
  } @else {
    $shadows: 0 0 2px rgba(#000, 0.25);
    -webkit-box-shadow: $shadow;
    box-shadow: $shadow;
  }
}

// 调用声明好的宏
button {
  @include border-radius(10px);
}

// 传入多个参数
// 两个
@mixin center($width, $height) {
  width: $width;
  height: $height;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -($height)/2;
  margin-left: -($width)/2;
}

.box-center {
  @include center(500px, 300px);
}

// 多个参数
.box {
  @include box-shadow(0 0 1px rgba(#000, 0.5), 0 0 2px rgba(#000, 0.2));
}

// 混合宏的缺点： 生成冗余的代码块,主要是不能智能地合并相同代码，这里只是做到了复用样式块
// 最优的其实是 .btn,.box{}
.btn {
  @include border-radius(10px);
}
.box {
  @include border-radius(10px);
  margin-bottom: 5px;
}
